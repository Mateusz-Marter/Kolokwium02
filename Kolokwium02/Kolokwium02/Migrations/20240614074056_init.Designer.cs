// <auto-generated />
using System;
using Kolokwium02.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kolokwium02.Migrations
{
    [DbContext(typeof(SubContext))]
    [Migration("20240614074056_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.5.24306.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication4.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClient");

                    b.ToTable("_Clients");
                });

            modelBuilder.Entity("WebApplication4.Models.Discount", b =>
                {
                    b.Property<int>("IdDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiscount"));

                    b.Property<DateOnly>("DateFrom")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DateTo")
                        .HasColumnType("date");

                    b.Property<int>("IdSubscription")
                        .HasColumnType("int");

                    b.Property<int>("IdSubscriptionNavigationIdSubscription")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("IdDiscount");

                    b.HasIndex("IdSubscriptionNavigationIdSubscription");

                    b.ToTable("_Discounts");
                });

            modelBuilder.Entity("WebApplication4.Models.Payment", b =>
                {
                    b.Property<int>("IdPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPayment"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdClientNavigationIdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdSubscription")
                        .HasColumnType("int");

                    b.Property<int>("IdSubscriptionNavigationIdSubscription")
                        .HasColumnType("int");

                    b.HasKey("IdPayment");

                    b.HasIndex("IdClientNavigationIdClient");

                    b.HasIndex("IdSubscriptionNavigationIdSubscription");

                    b.ToTable("_Payments");
                });

            modelBuilder.Entity("WebApplication4.Models.Sale", b =>
                {
                    b.Property<int>("IdSale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSale"));

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdClientNavigationIdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdSubscription")
                        .HasColumnType("int");

                    b.Property<int>("IdSubscriptionNavigationIdSubscription")
                        .HasColumnType("int");

                    b.HasKey("IdSale");

                    b.HasIndex("IdClientNavigationIdClient");

                    b.HasIndex("IdSubscriptionNavigationIdSubscription");

                    b.ToTable("_Sales");
                });

            modelBuilder.Entity("WebApplication4.Models.Subscription", b =>
                {
                    b.Property<int>("IdSubscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubscription"));

                    b.Property<DateOnly>("EndTime")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RenewalPeriod")
                        .HasColumnType("int");

                    b.HasKey("IdSubscription");

                    b.ToTable("_Subscriptions");
                });

            modelBuilder.Entity("WebApplication4.Models.Discount", b =>
                {
                    b.HasOne("WebApplication4.Models.Subscription", "IdSubscriptionNavigation")
                        .WithMany("Discounts")
                        .HasForeignKey("IdSubscriptionNavigationIdSubscription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdSubscriptionNavigation");
                });

            modelBuilder.Entity("WebApplication4.Models.Payment", b =>
                {
                    b.HasOne("WebApplication4.Models.Client", "IdClientNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("IdClientNavigationIdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Subscription", "IdSubscriptionNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("IdSubscriptionNavigationIdSubscription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdSubscriptionNavigation");
                });

            modelBuilder.Entity("WebApplication4.Models.Sale", b =>
                {
                    b.HasOne("WebApplication4.Models.Client", "IdClientNavigation")
                        .WithMany("Sales")
                        .HasForeignKey("IdClientNavigationIdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication4.Models.Subscription", "IdSubscriptionNavigation")
                        .WithMany("Sales")
                        .HasForeignKey("IdSubscriptionNavigationIdSubscription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdSubscriptionNavigation");
                });

            modelBuilder.Entity("WebApplication4.Models.Client", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("WebApplication4.Models.Subscription", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Payments");

                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
